#   Compose file to start a Mariadb container and a Zoneminde container
#
#   Define variables in .env file (check env.example)
#     Define volume directory for the container 
#     Define Zmevent machine learning models to download at first container launch
#   Https thanks to traefik reverse proxy (other project)
#   Letsencrypt certificate extraction with traefik-certs-dumper from ldez (used by zmevent server)
#
# To create and start containers:Â docker-compose up -d

services:
    
  zm-db:
    image: "mariadb:10.9.5-jammy"
    container_name: "zm-db"
    restart: "unless-stopped"
    networks:
      - zmnet
    volumes:
      - maria_data:/var/lib/mysql
      - maria_conf:/etc/mysql/conf.d
      - type: tmpfs
        target: /dev/shm
    environment:
      - TZ=${TZ}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - MARIADB_RANDOM_ROOT_PASSWORD=yes

  zm:
    image: "d4void/docker-zoneminder:1.36.33"
    container_name: "zm"
    depends_on:
      - zm-db
      - traefik
    restart: "unless-stopped"
    networks:
      - default
      - zmnet
    volumes:      
      - zm_cron:/etc/cron.d
      - zm_conf:/etc/zm
      - zm_ssmtp:/etc/ssmtp
      - zm_log:/var/log/zm
      - zm_apache_log:/var/log/apache2/
      - zm_cache:/var/cache/zoneminder
      - zm_models:/var/lib/zmeventnotification/models
      - zm_images:/var/lib/zmeventnotification/images
      - type: tmpfs
        target: /dev/shm
    environment:
      - TZ=${TZ}
      - ZM_DB_HOST=zm-db
      - INSTALL_YOLOV3=${INSTALL_YOLOV3}
      - INSTALL_TINYYOLOV3=${INSTALL_TINYYOLOV3}
      - INSTALL_YOLOV4=${INSTALL_YOLOV4}
      - INSTALL_TINYYOLOV4=${INSTALL_TINYYOLOV4}
      - INSTALL_CORAL_EDGETPU=${INSTALL_CORAL_EDGETPU}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zmcontainer.rule=Host(`${ZM_FQDN}`)"
      - "traefik.http.routers.zmcontainer.entrypoints=web"
      - "traefik.http.routers.zmcontainer.middlewares=zmcontainer-redirect-secure"
      - "traefik.http.middlewares.zmcontainer-redirect-secure.redirectscheme.scheme=https"
      - "traefik.http.routers.zmcontainer-secured.rule=Host(`${ZM_FQDN}`)"
      - "traefik.http.routers.zmcontainer-secured.entrypoints=websecure"
      - "traefik.http.routers.zmcontainer-secured.tls=true"
      - "traefik.http.routers.zmcontainer-secured.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.zmcontainer-secured.middlewares=security@file"
      - "traefik.http.routers.zmcontainer-secured.service=myzmservice"
      - "traefik.http.services.myzmservice.loadbalancer.server.port=80"
      - "traefik.http.services.myzmservice.loadbalancer.server.scheme=http"
      - "traefik.http.routers.zmescontainer.rule=Host(`${ES_FQDN}`)"
      - "traefik.http.routers.zmescontainer.entrypoints=zmevent"
      - "traefik.http.routers.zmescontainer.tls=true"
      - "traefik.http.routers.zmescontainer.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.zmescontainer.middlewares=security@file"
      - "traefik.http.routers.zmescontainer.service=myzmesservice"
      - "traefik.http.services.myzmesservice.loadbalancer.server.port=9000"
      - "traefik.http.services.myzmesservice.loadbalancer.server.scheme=http"

  traefik-certs-dumper:
    image: ldez/traefik-certs-dumper:v2.8.3
    container_name: traefik-certs-dumper
    depends_on:
      - traefik
    restart: "unless-stopped"
    entrypoint: sh -c '
      apk add jq
      ; while ! [ -e /letsencrypt/acme.json ]
      || ! [ `jq ".[] | .Certificates | length" /letsencrypt/acme.json` != 0 ]; do
      sleep 1
      ; done
      && traefik-certs-dumper file --version v2 --watch
       --source /letsencrypt/acme.json --dest /zmconfig/certs --post-hook "chmod -R 755 /zmconfig/certs" '
    networks:
      - default
      - zmnet
    volumes:
      - letsencrypt_data:/letsencrypt
      - zm_conf:/zmconfig


volumes:
  maria_data:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/mysql
      o: bind
  maria_conf:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/etc/mysql_confd
      o: bind
  zm_cron:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/etc/cron.d
      o: bind
  zm_conf:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/etc/zm
      o: bind
  zm_ssmtp:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/etc/ssmtp
      o: bind
  zm_log:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/log/zm-log
      o: bind
  zm_apache_log:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/log/apache2-log
      o: bind
  zm_cache:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/var/cache
      o: bind
  zm_models:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/var/lib/zmeventnotification/models
      o: bind
  zm_images:
    driver: local
    driver_opts:
      type: none
      device: ${ZM_VOL}/var/lib/zmeventnotification/images
      o: bind


networks:
  zmnet:
    internal: true
    name: MyZmnet
